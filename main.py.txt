from machine import Pin, SoftI2C
from time import sleep
import BME280
import network
import time
from umqtt.simple import MQTTClient


SERVER = "mqtt.favoriot.com"
client = MQTTClient("umqtt_client", SERVER, user="q5nuYLNErBhhsaQnAOtkzdWzycgPBQGn", password="q5nuYLNErBhhsaQnAOtkzdWzycgPBQGn")

wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.disconnect()

# ESP32 - Pin assignment
i2c = SoftI2C(scl=Pin(22), sda=Pin(21), freq=10000)
# ESP8266 - Pin assignment
#i2c = I2C(scl=Pin(5), sda=Pin(4), freq=10000)

"""while True:
  bme = BME280.BME280(i2c=i2c)
  temp = bme.temperature
  hum = bme.humidity
  pres = bme.pressure
  
  #uncomment for temperature in Fahrenheit
  #temp = (bme.read_temperature()/100) * (9/5) + 32
  #temp = str(round(temp, 2)) + 'F'
  
  print('Temperature: ', temp)
  print('Humidity: ', hum)
  print('Pressure: ', pres)
  print()
  sleep(5)"""
  
if not wlan.isconnected():
  wlan.connect('TP-Link_784B', '99471392')
  
  while not wlan.isconnected():
    print('network config:', wlan.ifconfig())
    time.sleep(1)

  while wlan.isconnected():
    
    topic = "q5nuYLNErBhhsaQnAOtkzdWzycgPBQGn/v2/streams"
    client.connect()
    print("ok")
    while True:
      bme = BME280.BME280(i2c=i2c)
      temp = bme.temperature
      hum = bme.humidity
      pres = bme.pressure
      client.publish(topic, 
      '{"device_developer_id": "deviceDefault@S60705", "data": {"temperature": "%s","humidity": "%s","pressure": "%s"}}'% (temp, hum, pres))
      #client.disconnect()
      time.sleep(15)







